<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- 트랜잭션 관리자 선언  -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property> <!-- 내부적으로 DataSource에서 획득하게 될 Connection 객체를 이용해서 트랜잭션을 관리 -->
	</bean>
	
	<!-- 트랜잭션 특성을 부여하는 AOP 어드바이스, 밑에서 추가로 포인트컷 필요 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- rollback-for 를 쓰지 않으면 기본은 RuntimeException, Error 에 대해서만 롤백 IOException 
				같은경우 롤백처리 안된다... -->
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="execute*" propagation="REQUIRED" rollback-for="Exception" />

			<!-- <tx:method name="*" read-only="true" /> -->
		</tx:attributes>
	</tx:advice>
	
	<!-- 어드바이저 설정 -->
	<aop:config>
		<!-- 이 파일 메소드에 트랜잭션을 적용 시켜라 -->
		<aop:pointcut id="requiredTx" expression="execution(* spring..service.*Service.*(..))" />
		
		<aop:advisor id="transactionAdvisor" advice-ref="txAdvice" pointcut-ref="requiredTx" />
	</aop:config>
</beans>