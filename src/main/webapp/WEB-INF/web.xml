<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
	<display-name>SpringBoard</display-name>
	<description>SpringBoard Desc</description>
	
	<!-- 스프링 설정 정보를 읽는다. -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- STS에서 기본적으로 제공해주는 설정파일 외에, 사용자가 직접 컨트롤 하는 XML파일을 불러온다. -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/config/spring/context-*.xml</param-value>
	</context-param>
	
	<!-- 스프링에서는 DispatcherServlet이 모든 요청을 받고, 요청의 URL과 매핑하는 Controller-->
	<servlet>
		<servlet-name>action</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/config/spring/applicationContext.xml</param-value>
		</init-param>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
	<!-- 선택 설정 1. error page 설정 -->
	<!-- location에는 절대경로 또는 url 매핑으로 컨트롤러에서 제어가 가능하다. -->
	<!--
	<error-page>
		<error-code>404</error-code>
		<location>/WEB-INF/jsp/error/error.jsp</location>
	</error-page>
	<error-page>
		<error-code>java.lang.Throwable</error-code>
		<location>/WEB-INF/jsp/error/error.jsp</location>
	</error-page>
	-->
	
	<!-- 선택 설정 2. 시작페이지 설정 -->
	<!--
		- webapp 밑에 index.jsp 생성
		
		/ 로 요청 시 지정되어 있는 리소스를 호출한다는 의미
		controller에 / 로 매핑되어 있는 메소드가 있더라도 web.xml에 지정되어 있는 자원을 우선시한다.
		
		보통은 웹사이트가 최초로 보여주는 페이지를 설정하거나 로그인 페이지로 설정하는데 활용
	-->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
</web-app>